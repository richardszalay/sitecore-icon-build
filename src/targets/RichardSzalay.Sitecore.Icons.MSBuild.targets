<Project>

  <PropertyGroup>
    <BuildSitecoreIconArchives Condition="'$(BuildSitecoreIconArchives)' == ''">true</BuildSitecoreIconArchives>
    <CollectDefaultSitecoreSizedIconSources>$(BuildSitecoreIconArchives)</CollectDefaultSitecoreSizedIconSources>
    <DefaultSitecoreSizedIconSourcesParentDirectory>sitecore\shell\Themes\Standard</DefaultSitecoreSizedIconSourcesParentDirectory>
  </PropertyGroup>

  <PropertyGroup>
    <IntermediateSitecoreIconArchivePath>$(IntermediateOutputPath)sitecoreIcons\</IntermediateSitecoreIconArchivePath>

    <CleanDependsOn>
      $(CleanDependsOn);
      CleanIntermediateSitecoreIconArchivePath
    </CleanDependsOn>

    <BuildSitecoreIconArchivesDependsOn>
      $(BuildSitecoreIconArchivesDependsOn);
      CollectSitecoreSizedIconSourceFiles;
    </BuildSitecoreIconArchivesDependsOn>

    <PipelineCollectFilesPhaseDependsOn>
      $(PipelineCollectFilesPhaseDependsOn);
      CollectGeneratedSitecoreIconArchives;
    </PipelineCollectFilesPhaseDependsOn>

    <ExcludeFilesFromPackageDependsOn>
      $(ExcludeFilesFromPackageDependsOn);
      ExcludeSizedIconSources
    </ExcludeFilesFromPackageDependsOn>
  </PropertyGroup>

  <Target Name="CollectSitecoreSizedIconSources">
    <ItemGroup>
      <SitecoreSizedIconSources Include="$([System.IO.Directory]::GetDirectories(`$(DefaultSitecoreSizedIconSourcesParentDirectory)`))"  />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <CollectSitecoreSizedIconSourceFilesDependsOn>
      $(CollectSitecoreSizedIconSourceFilesDependsOn);
      CollectSitecoreSizedIconSources;
    </CollectSitecoreSizedIconSourceFilesDependsOn>
  </PropertyGroup>

  <Target Name="CollectSitecoreSizedIconSourceFiles" DependsOnTargets="$(CollectSitecoreSizedIconSourceFilesDependsOn)">
    <ItemGroup>
      <_SitecoreSizedIconSourceFilesSpecs Include="@(SitecoreSizedIconSources -> '%(FullPath)\**\*')"
                                          >
        <ArchiveName>%(Filename)</ArchiveName>
      </_SitecoreSizedIconSourceFilesSpecs>
    </ItemGroup>

    <CreateItem Include="@(_SitecoreSizedIconSourceFilesSpecs)">
      <Output TaskParameter="Include" ItemName="_SitecoreSizedIconSourceFiles" />
    </CreateItem>

    <ItemGroup>
      <SitecoreSizedIconSourceFiles Include="@(_SitecoreSizedIconSourceFiles)"
                                    Condition="'%(RecursiveDir)' != ''">
        <EntryPath>%(RecursiveDir)%(Filename)%(Extension)</EntryPath>
      </SitecoreSizedIconSourceFiles>
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <BuildSitecoreSizedIconArchivesDependsOn Condition="'$(CollectDefaultSitecoreSizedIconSources)' == 'true'">
      $(BuildSitecoreSizedIconArchivesDependsOn);
      CollectSitecoreSizedIconSourceFiles
    </BuildSitecoreSizedIconArchivesDependsOn>    
  </PropertyGroup>

  <Target Name="CollectGeneratedSitecoreIconArchives">
    <ItemGroup>
      <_SitecoreIconArchivesForPackaging Include="$(IntermediateSitecoreIconArchivePath)*.zip" />
      <FilesForPackagingFromProject Include="@(_SitecoreIconArchivesForPackaging)">
        <DestinationRelativePath>sitecore\shell\Themes\Standard\%(Filename)%(Extension)</DestinationRelativePath>
      </FilesForPackagingFromProject>
    </ItemGroup>
  </Target>

  <Target Name="ExcludeSizedIconSources" DependsOnTargets="CollectSitecoreSizedIconSourceFiles">
    <ItemGroup>
      <ExcludeFromPackageFiles Include="@(SitecoreSizedIconSourceFiles)" />
    </ItemGroup>
  </Target>

  <Target Name="CleanIntermediateSitecoreIconArchivePath">
    <RemoveDir Directories="$(IntermediateSitecoreIconArchivePath)" Condition="Exists($(IntermediateSitecoreIconArchivePath))" />
  </Target>

  <Target Name="BuildSitecoreIconArchives" 
          AfterTargets="Compile"
          DependsOnTargets="$(BuildSitecoreIconArchivesDependsOn)"
          Inputs="@(SitecoreSizedIconSourceFiles)"
          Outputs="$(IntermediateSitecoreIconArchivePath)%(ArchiveName).zip"
          >

    <MakeDir Directories="$(IntermediateSitecoreIconArchivePath)"
          Condition="!Exists($(IntermediateSitecoreIconArchivePath))" />

    <CreateSitecoreIconArchive
         Entries="@(SitecoreSizedIconSourceFiles)"
         Output="$(IntermediateSitecoreIconArchivePath)%(ArchiveName).zip"
         />

  </Target>

  <UsingTask TaskName="CreateSitecoreIconArchive" AssemblyFile="RichardSzalay.Sitecore.Icons.Tasks.dll"/>
</Project>